{"version":3,"file":"static/js/916.9c961340.chunk.js","mappings":"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","sources":["RejectionAnalyzerView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n// Importo Recharts per i grafici\nimport { \n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, ResponsiveContainer \n} from 'recharts';\n// Importo icone\nimport { \n  FaProjectDiagram, FaExclamationTriangle, \n  FaExclamationCircle, FaChartLine, \n  FaArrowUp, FaArrowDown, FaInfoCircle \n} from 'react-icons/fa';\n\n// Dati di esempio (in produzione verrebbero caricati da un file JSON)\nconst sampleData = {\n  \"qc_report_data\": {\n    \"updated_on\": \"2025-03-31\",\n    \"description\": \"Cumulative QC audio data - Jan-Mar 2025\",\n    \"notes\": \"Tutti i dati si riferiscono a errori audio esclusivamente di progetti Deluxe; aggiornamento manuale.\"\n  },\n  \"months\": [\n    {\n      \"year\": 2025,\n      \"month\": 1,\n      \"projects_analyzed\": 10,\n      \"total_rejections\": 40,\n      \"rejections_severity_3\": 12,\n      \"top_error_types\": [\n        { \"type\": \"Missing Dialogue\", \"occurrences\": 10 },\n        { \"type\": \"Dialogue sync – long\", \"occurrences\": 8 },\n        { \"type\": \"Extraneous efforts\", \"occurrences\": 6 },\n        { \"type\": \"True peak out of spec\", \"occurrences\": 3 },\n        { \"type\": \"Pop, tick, click\", \"occurrences\": 3 }\n      ],\n      \"top_projects_by_errors\": [\n        {\n          \"project_name\": \"Morphle and the Magic Pets\",\n          \"episodes_counted\": 2,\n          \"total_errors\": 14,\n          \"severity_3_errors\": 5\n        },\n        {\n          \"project_name\": \"EARTH ABIDES\",\n          \"episodes_counted\": 2,\n          \"total_errors\": 10,\n          \"severity_3_errors\": 4\n        },\n        {\n          \"project_name\": \"Reacher\",\n          \"episodes_counted\": 1,\n          \"total_errors\": 5,\n          \"severity_3_errors\": 2\n        }\n      ]\n    },\n    {\n      \"year\": 2025,\n      \"month\": 2,\n      \"projects_analyzed\": 15,\n      \"total_rejections\": 52,\n      \"rejections_severity_3\": 14,\n      \"top_error_types\": [\n        { \"type\": \"Missing Dialogue\", \"occurrences\": 12 },\n        { \"type\": \"Dialogue sync – long\", \"occurrences\": 9 },\n        { \"type\": \"Extraneous efforts\", \"occurrences\": 7 },\n        { \"type\": \"Missing walla\", \"occurrences\": 5 },\n        { \"type\": \"Pop, tick, click\", \"occurrences\": 3 }\n      ],\n      \"top_projects_by_errors\": [\n        {\n          \"project_name\": \"EARTH ABIDES\",\n          \"episodes_counted\": 2,\n          \"total_errors\": 18,\n          \"severity_3_errors\": 7\n        },\n        {\n          \"project_name\": \"Cometierra\",\n          \"episodes_counted\": 2,\n          \"total_errors\": 12,\n          \"severity_3_errors\": 4\n        },\n        {\n          \"project_name\": \"Reacher\",\n          \"episodes_counted\": 1,\n          \"total_errors\": 5,\n          \"severity_3_errors\": 3\n        }\n      ]\n    },\n    {\n      \"year\": 2025,\n      \"month\": 3,\n      \"projects_analyzed\": 12,\n      \"total_rejections\": 50,\n      \"rejections_severity_3\": 15,\n      \"top_error_types\": [\n        { \"type\": \"Missing Dialogue\", \"occurrences\": 10 },\n        { \"type\": \"Dialogue sync – long\", \"occurrences\": 8 },\n        { \"type\": \"True peak out of spec\", \"occurrences\": 3 },\n        { \"type\": \"Extraneous efforts\", \"occurrences\": 3 },\n        { \"type\": \"Pop, tick, click\", \"occurrences\": 2 }\n      ],\n      \"top_projects_by_errors\": [\n        {\n          \"project_name\": \"Another Simple Favor\",\n          \"episodes_counted\": 1,\n          \"total_errors\": 8,\n          \"severity_3_errors\": 2\n        },\n        {\n          \"project_name\": \"Primos\",\n          \"episodes_counted\": 2,\n          \"total_errors\": 12,\n          \"severity_3_errors\": 3\n        }\n      ]\n    }\n  ]\n};\n\n// Stili generali\nconst Container = styled.div`\n  background-color: #f0f9ff;\n  min-height: 100vh;\n  padding: 24px;\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n`;\n\nconst Content = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst Title = styled.h1`\n  font-size: 28px;\n  font-weight: bold;\n  color: #1f2937;\n`;\n\nconst UpdateInfo = styled.div`\n  margin-top: 8px;\n  font-size: 14px;\n  color: #6b7280;\n`;\n\nconst BackButton = styled.button`\n  background-color: #e0e7ff;\n  color: #4b5563;\n  border: none;\n  border-radius: 8px;\n  padding: 10px 16px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #c7d2fe;\n  }\n`;\n\nconst Section = styled.div`\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 24px;\n  margin-bottom: 24px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 16px;\n`;\n\nconst Description = styled.p`\n  font-size: 16px;\n  color: #4b5563;\n  margin-bottom: 20px;\n`;\n\nconst KPIContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  gap: 16px;\n  margin-bottom: 20px;\n`;\n\nconst KPIBox = styled.div`\n  background-color: ${props => props.bgColor || '#eef2ff'};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nconst KPILabel = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: #4b5563;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nconst KPIValue = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  color: #1f2937;\n`;\n\nconst ComparisonSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  background-color: #f9fafb;\n  border-radius: 10px;\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n\nconst ComparisonItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst ComparisonLabel = styled.div`\n  font-size: 15px;\n  font-weight: 500;\n  color: #4b5563;\n`;\n\nconst ComparisonValue = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${props => props.isPositive ? '#16a34a' : '#dc2626'};\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nconst ErrorListItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #e5e7eb;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ErrorType = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  color: #4b5563;\n`;\n\nconst ErrorCount = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n`;\n\nconst TwoColumnGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));\n  gap: 24px;\n  margin-bottom: 20px;\n`;\n\nconst ChartContainer = styled.div`\n  height: 300px;\n  margin-bottom: 20px;\n`;\n\nconst Footer = styled.div`\n  font-size: 14px;\n  color: #6b7280;\n  text-align: center;\n  margin-top: 30px;\n  padding-top: 20px;\n  border-top: 1px solid #e5e7eb;\n`;\n\n// Componente principale\nconst RejectionAnalyzerView = ({ setView }) => {\n  const [reportData, setReportData] = useState(null);\n  const [currentMonth, setCurrentMonth] = useState(null);\n  const [previousMonth, setPreviousMonth] = useState(null);\n  const [chartData, setChartData] = useState([]);\n  const [annualSummary, setAnnualSummary] = useState(null);\n\n  // Caricamento e elaborazione dei dati\n  useEffect(() => {\n    // Inizia con i dati di esempio come fallback sicuro\n    const loadData = (data) => {\n      setReportData(data);\n      \n      if (data && data.months && data.months.length > 0) {\n        // Ottieni i dati dell'ultimo mese\n        const lastMonthIndex = data.months.length - 1;\n        const current = data.months[lastMonthIndex];\n        setCurrentMonth(current);\n        \n        // Ottieni i dati del mese precedente se disponibile\n        if (lastMonthIndex > 0) {\n          setPreviousMonth(data.months[lastMonthIndex - 1]);\n        }\n        \n        // Prepara i dati per il grafico\n        const chartDataArray = data.months.map(month => {\n          const errorsPerProject = Math.round(month.total_rejections / month.projects_analyzed);\n          const severity3PerProject = +(month.rejections_severity_3 / month.projects_analyzed).toFixed(2);\n          const severity3Percentage = +((month.rejections_severity_3 / month.total_rejections) * 100).toFixed(1);\n          const qualityIndex = +(10 - (severity3PerProject * 2)).toFixed(1);\n          \n          return {\n            name: `${month.month}/${month.year}`,\n            projects: month.projects_analyzed,\n            errors: month.total_rejections,\n            severity3: month.rejections_severity_3,\n            errorsPerProject,\n            severity3PerProject,\n            severity3Percentage,\n            qualityIndex: qualityIndex < 0 ? 0 : qualityIndex > 10 ? 10 : qualityIndex\n          };\n        });\n        setChartData(chartDataArray);\n        \n        // Calcola il riepilogo annuale\n        const summary = {\n          totalProjects: data.months.reduce((acc, month) => acc + month.projects_analyzed, 0),\n          totalErrors: data.months.reduce((acc, month) => acc + month.total_rejections, 0),\n          totalSeverity3: data.months.reduce((acc, month) => acc + month.rejections_severity_3, 0),\n          // Aggregazione degli errori per tipo\n          errorTypes: aggregateErrorTypes(data.months)\n        };\n        setAnnualSummary(summary);\n      }\n    };\n\n    // Prova a caricare i dati dal file JSON, ma usa sampleData come fallback\n    try {\n      // Usa direttamente i dati di esempio senza tentare il fetch\n      loadData(sampleData);\n      \n      /* Per abilitare il caricamento da file esterno in futuro, decommentare questo blocco\n      fetch('/data/qc_report_data.json')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('File non trovato');\n          }\n          return response.json();\n        })\n        .then(data => {\n          loadData(data);\n        })\n        .catch(error => {\n          console.warn('Utilizzo dati di esempio:', error.message);\n          loadData(sampleData);\n        });\n      */\n    } catch (error) {\n      console.error('Errore nel processamento dei dati:', error);\n      loadData(sampleData);\n    }\n  }, []);\n\n  // Funzione per aggregare i tipi di errore\n  const aggregateErrorTypes = (months) => {\n    const errorTypesMap = {};\n    \n    months.forEach(month => {\n      month.top_error_types.forEach(error => {\n        if (errorTypesMap[error.type]) {\n          errorTypesMap[error.type] += error.occurrences;\n        } else {\n          errorTypesMap[error.type] = error.occurrences;\n        }\n      });\n    });\n    \n    // Converti in array e ordina\n    return Object.entries(errorTypesMap)\n      .map(([type, occurrences]) => ({ type, occurrences }))\n      .sort((a, b) => b.occurrences - a.occurrences)\n      .slice(0, 5); // Prendi solo i primi 5\n  };\n\n  // Funzione per ottenere il nome del mese in italiano\n  const getMonthName = (monthNumber) => {\n    const monthNames = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', \n                        'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];\n    return monthNames[monthNumber - 1];\n  };\n\n  // Calcola la differenza percentuale\n  const calculatePercentageDifference = (current, previous) => {\n    if (!previous) return 0;\n    return Math.round(((current - previous) / previous) * 100);\n  };\n\n  const handleBack = () => {\n    setView('main');\n  };\n\n  if (!currentMonth) {\n    return (\n      <Container>\n        <Content>\n          <Header>\n            <Title>Analizzatore di Rejection</Title>\n            <BackButton onClick={handleBack}>\n              ← Torna alla dashboard\n            </BackButton>\n          </Header>\n          <Section>\n            <SectionTitle>Caricamento dati in corso...</SectionTitle>\n          </Section>\n        </Content>\n      </Container>\n    );\n  }\n\n  const errorsPerProject = Math.round(currentMonth.total_rejections / currentMonth.projects_analyzed);\n  \n  // Calcola differenze col mese precedente\n  const projectsDiff = previousMonth ? currentMonth.projects_analyzed - previousMonth.projects_analyzed : 0;\n  const errorsDiff = previousMonth ? currentMonth.total_rejections - previousMonth.total_rejections : 0;\n  const severity3Diff = previousMonth ? currentMonth.rejections_severity_3 - previousMonth.rejections_severity_3 : 0;\n\n  // Calcola differenze percentuali\n  const projectsDiffPercent = calculatePercentageDifference(currentMonth.projects_analyzed, previousMonth?.projects_analyzed);\n  const errorsDiffPercent = calculatePercentageDifference(currentMonth.total_rejections, previousMonth?.total_rejections);\n  const severity3DiffPercent = calculatePercentageDifference(currentMonth.rejections_severity_3, previousMonth?.rejections_severity_3);\n\n  return (\n    <Container>\n      <Content>\n        <Header>\n          <div>\n            <Title>Report Mensile QC Audio – {getMonthName(currentMonth.month)} {currentMonth.year}</Title>\n            <UpdateInfo>\n              Aggiornato al {reportData.qc_report_data.updated_on}\n            </UpdateInfo>\n            <Description>\n              {reportData.qc_report_data.notes}\n            </Description>\n          </div>\n          <BackButton onClick={handleBack}>\n            ← Torna alla dashboard\n          </BackButton>\n        </Header>\n\n        {/* KPI Section */}\n        <Section>\n          <SectionTitle>Informazioni Principali</SectionTitle>\n          <KPIContainer>\n            <KPIBox bgColor=\"#dbeafe\">\n              <KPILabel><FaProjectDiagram /> Progetti Analizzati</KPILabel>\n              <KPIValue>{currentMonth.projects_analyzed}</KPIValue>\n            </KPIBox>\n            <KPIBox bgColor=\"#dcfce7\">\n              <KPILabel><FaExclamationTriangle /> Errori Totali</KPILabel>\n              <KPIValue>{currentMonth.total_rejections}</KPIValue>\n            </KPIBox>\n            <KPIBox bgColor=\"#fee2e2\">\n              <KPILabel><FaExclamationCircle /> Errori Gravità 3</KPILabel>\n              <KPIValue>{currentMonth.rejections_severity_3}</KPIValue>\n            </KPIBox>\n            <KPIBox bgColor=\"#f3e8ff\">\n              <KPILabel><FaChartLine /> Errori/Progetto</KPILabel>\n              <KPIValue>{errorsPerProject}</KPIValue>\n            </KPIBox>\n          </KPIContainer>\n          \n          {/* Comparison with Previous Month */}\n          {previousMonth && (\n            <>\n              <SectionTitle>Confronto con {getMonthName(previousMonth.month)}</SectionTitle>\n              <ComparisonSection>\n                <ComparisonItem>\n                  <ComparisonLabel>Progetti:</ComparisonLabel>\n                  <ComparisonValue isPositive={projectsDiff >= 0}>\n                    {projectsDiff >= 0 ? <FaArrowUp /> : <FaArrowDown />}\n                    {projectsDiff >= 0 ? '+' : ''}{projectsDiff} ({projectsDiffPercent}%)\n                  </ComparisonValue>\n                </ComparisonItem>\n                <ComparisonItem>\n                  <ComparisonLabel>Errori Totali:</ComparisonLabel>\n                  <ComparisonValue isPositive={errorsDiff < 0}>\n                    {errorsDiff >= 0 ? <FaArrowUp /> : <FaArrowDown />}\n                    {errorsDiff >= 0 ? '+' : ''}{errorsDiff} ({errorsDiffPercent}%)\n                  </ComparisonValue>\n                </ComparisonItem>\n                <ComparisonItem>\n                  <ComparisonLabel>Errori Gravità 3:</ComparisonLabel>\n                  <ComparisonValue isPositive={severity3Diff < 0}>\n                    {severity3Diff >= 0 ? <FaArrowUp /> : <FaArrowDown />}\n                    {severity3Diff >= 0 ? '+' : ''}{severity3Diff} ({severity3DiffPercent}%)\n                  </ComparisonValue>\n                </ComparisonItem>\n              </ComparisonSection>\n            </>\n          )}\n        </Section>\n\n        {/* Nuovo grafico per il coefficiente di qualità */}\n        <Section>\n          <SectionTitle>Indice di Qualità Audio</SectionTitle>\n          <Description>\n            Questo grafico rappresenta indici qualitativi slegati dal volume di progetti. I valori mostrano: errori di severità 3 per progetto, \n            percentuale di errori gravi sul totale, e indice di qualità (scala 0-10, dove 10 è la massima qualità).\n          </Description>\n          <ChartContainer>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={chartData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis yAxisId=\"left\" orientation=\"left\" />\n                <YAxis yAxisId=\"right\" orientation=\"right\" domain={[0, 10]} />\n                <Tooltip formatter={(value, name) => {\n                  if (name === \"qualityIndex\") return [value + \"/10\", \"Indice Qualità\"];\n                  if (name === \"severity3PerProject\") return [value, \"Errori Sev.3/Progetto\"];\n                  if (name === \"severity3Percentage\") return [value + \"%\", \"% Errori Sev.3\"];\n                  return [value, name];\n                }} />\n                <Legend />\n                <Bar \n                  yAxisId=\"right\"\n                  dataKey=\"qualityIndex\" \n                  name=\"Indice Qualità\" \n                  fill=\"#22c55e\"\n                  barSize={35}\n                />\n                <Bar \n                  yAxisId=\"left\"\n                  dataKey=\"severity3Percentage\" \n                  name=\"% Errori Sev.3\" \n                  fill=\"#f97316\"\n                  barSize={15}\n                />\n                <Bar \n                  yAxisId=\"left\"\n                  dataKey=\"severity3PerProject\" \n                  name=\"Errori Sev.3/Progetto\" \n                  fill=\"#ef4444\"\n                  barSize={15}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </ChartContainer>\n        </Section>\n\n        {/* Trend Chart */}\n        <Section>\n          <SectionTitle>Andamento Mensile</SectionTitle>\n          <ChartContainer>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={chartData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"projects\" \n                  stroke=\"#3b82f6\" \n                  name=\"Progetti\"\n                  strokeWidth={2}\n                />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"errors\" \n                  stroke=\"#22c55e\" \n                  name=\"Errori Totali\"\n                  strokeWidth={2}\n                />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"severity3\" \n                  stroke=\"#ef4444\" \n                  name=\"Errori Gravità 3\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </ChartContainer>\n        </Section>\n\n        {/* Error Types and Projects */}\n        <TwoColumnGrid>\n          {/* Top Error Types */}\n          <Section>\n            <SectionTitle>Top 5 Errori Audio ({getMonthName(currentMonth.month)} {currentMonth.year})</SectionTitle>\n            {currentMonth.top_error_types.map((error, index) => (\n              <ErrorListItem key={`error-${index}`}>\n                <ErrorType>\n                  {index + 1}. {error.type}\n                </ErrorType>\n                <ErrorCount>{error.occurrences}</ErrorCount>\n              </ErrorListItem>\n            ))}\n          </Section>\n\n          {/* Progetti con più errori (sostituisce \"Errori Gravità 3 più Comuni\") */}\n          <Section>\n            <SectionTitle>Progetti con più errori ({getMonthName(currentMonth.month)} {currentMonth.year})</SectionTitle>\n            {currentMonth.top_projects_by_errors.map((project, index) => (\n              <ErrorListItem key={`project-${index}`}>\n                <ErrorType>\n                  {index + 1}. {project.project_name} ({project.episodes_counted} {project.episodes_counted === 1 ? 'episodio' : 'episodi'})\n                </ErrorType>\n                <ErrorCount>{project.total_errors} <span style={{ fontSize: '14px', color: '#dc2626' }}>({project.severity_3_errors} grav. 3)</span></ErrorCount>\n              </ErrorListItem>\n            ))}\n          </Section>\n        </TwoColumnGrid>\n\n        {/* Projects with Most Errors - Detailed Bar Chart */}\n        <Section>\n          <SectionTitle>Analisi Dettagliata Progetti ({getMonthName(currentMonth.month)} {currentMonth.year})</SectionTitle>\n          <ChartContainer>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={currentMonth.top_projects_by_errors}\n                layout=\"vertical\"\n                margin={{ top: 5, right: 30, left: 100, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis type=\"number\" />\n                <YAxis \n                  type=\"category\" \n                  dataKey=\"project_name\" \n                  tick={{ fontSize: 14 }}\n                />\n                <Tooltip />\n                <Legend />\n                <Bar \n                  dataKey=\"total_errors\" \n                  name=\"Errori Totali\" \n                  fill=\"#3b82f6\" \n                />\n                <Bar \n                  dataKey=\"severity_3_errors\" \n                  name=\"Errori Gravità 3\" \n                  fill=\"#ef4444\" \n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </ChartContainer>\n        </Section>\n\n        {/* Annual Summary */}\n        {annualSummary && (\n          <Section>\n            <SectionTitle>Riassunto Annuale ({currentMonth.year})</SectionTitle>\n            <TwoColumnGrid>\n              <div>\n                <KPIContainer>\n                  <KPIBox bgColor=\"#f3f4f6\">\n                    <KPILabel>Progetti Totali {currentMonth.year}</KPILabel>\n                    <KPIValue>{annualSummary.totalProjects}</KPIValue>\n                  </KPIBox>\n                  <KPIBox bgColor=\"#f3f4f6\">\n                    <KPILabel>Errori Totali {currentMonth.year}</KPILabel>\n                    <KPIValue>{annualSummary.totalErrors}</KPIValue>\n                  </KPIBox>\n                  <KPIBox bgColor=\"#f3f4f6\">\n                    <KPILabel>Errori Gravità 3 {currentMonth.year}</KPILabel>\n                    <KPIValue>{annualSummary.totalSeverity3}</KPIValue>\n                  </KPIBox>\n                </KPIContainer>\n              </div>\n              <div>\n                <SectionTitle>Top 5 Errori (Anno {currentMonth.year})</SectionTitle>\n                {annualSummary.errorTypes.map((error, index) => (\n                  <ErrorListItem key={`annual-error-${index}`}>\n                    <ErrorType>\n                      {index + 1}. {error.type}\n                    </ErrorType>\n                    <ErrorCount>{error.occurrences}</ErrorCount>\n                  </ErrorListItem>\n                ))}\n          </div>\n            </TwoColumnGrid>\n          </Section>\n        )}\n\n        {/* Footer */}\n        <Footer>\n          <p>Fonte dati: QC report estratti Sferastudios (solo audio). Aggiornato manualmente ogni fine mese.</p>\n          <p>Nessun errore video incluso.</p>\n          <p>© StudioStats 2025 Marco Augusto Comba | Versione 1.6.1</p>\n        </Footer>\n\n      </Content>\n    </Container>\n  );\n};\n\nexport default RejectionAnalyzerView; "],"names":["sampleData","Container","styled","div","Content","Header","Title","h1","UpdateInfo","BackButton","button","Section","SectionTitle","h2","Description","p","KPIContainer","KPIBox","props","bgColor","KPILabel","KPIValue","ComparisonSection","ComparisonItem","ComparisonLabel","ComparisonValue","isPositive","ErrorListItem","ErrorType","ErrorCount","TwoColumnGrid","ChartContainer","Footer","_ref","setView","reportData","setReportData","useState","currentMonth","setCurrentMonth","previousMonth","setPreviousMonth","chartData","setChartData","annualSummary","setAnnualSummary","useEffect","loadData","data","months","length","lastMonthIndex","current","chartDataArray","map","month","errorsPerProject","Math","round","total_rejections","projects_analyzed","severity3PerProject","rejections_severity_3","toFixed","severity3Percentage","qualityIndex","name","year","projects","errors","severity3","summary","totalProjects","reduce","acc","totalErrors","totalSeverity3","errorTypes","aggregateErrorTypes","error","console","errorTypesMap","forEach","top_error_types","type","occurrences","Object","entries","_ref2","sort","a","b","slice","getMonthName","monthNumber","calculatePercentageDifference","previous","handleBack","_jsx","children","_jsxs","onClick","projectsDiff","errorsDiff","severity3Diff","projectsDiffPercent","errorsDiffPercent","severity3DiffPercent","qc_report_data","updated_on","notes","FaProjectDiagram","FaExclamationTriangle","FaExclamationCircle","FaChartLine","_Fragment","FaArrowUp","FaArrowDown","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","yAxisId","orientation","domain","Tooltip","formatter","value","Legend","Bar","fill","barSize","LineChart","Line","stroke","strokeWidth","index","top_projects_by_errors","project","project_name","episodes_counted","total_errors","style","fontSize","color","severity_3_errors","layout","tick"],"sourceRoot":""}